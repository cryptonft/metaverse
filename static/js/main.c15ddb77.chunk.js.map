{"version":3,"sources":["components/Header.js","img/hero-img.png","components/Hero.js","img/svg/1.gif","img/svg/2.png","img/svg/3.png","img/newDemo.png","components/Intro.js","img/team/1.png","img/team/2.png","img/team/3.png","img/team/4.png","components/Team.js","img/svg/asteroid.svg","img/svg/paint-palette.svg","img/svg/design-tool.svg","img/svg/vector.svg","components/Roadmap.js","components/Faq.js","components/Footer.js","components/Detail.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","components/Slide.js","styles/globalStyles.js","components/Profile.js","components/Choice.js","components/Avatar.js","components/Minter.js","components/Whitelist.js","components/Early.js","App.js","reportWebVitals.js","index.js"],"names":["Header","id","className","href","target","rel","Hero","src","mainLogo","alt","Intro","banner","cloud","planet","astroid","Team","team3","team2","team1","team4","Roadmap","asteroid","paint","tool","vector","Faq","Footer","styled","button","Detail","id2","String","useParams","useState","dna","mountain","trees","grass","sand","gems","data","setData","useEffect","document","title","axios","get","then","res","attrData","attributes","value","catch","err","console","log","Number","imgurl","align","initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","name","error","dataReducer","rootReducer","combineReducers","blockchain","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","connectFailed","connect","window","ethereum","Web3","request","method","accounts","SmartContractObj","eth","Contract","SmartContract","abi","on","updateAccount","location","reload","Slide","props","imgur","tokid","playur","detur","div","image","SpacerSmall","Container","StyledButton","p","Profile","fetching","useDispatch","useSelector","stateZ","setStateZ","bigTable","setBigTable","getData","arrz","options","chkNFTs","addr","req1","lim","assets","length","i","token_id","res2","seed","newmap","push","tabletext","newData","map","item","chkArray","ai","jc","onClick","e","preventDefault","fd","Choice","history","useHistory","localStorage","setItem","slug","Avatar","checkingNft","collectionTable","setcollectionTable","arry","obj","coll","image_url","newface","arrx","disabled","Minter","feedback","setFeedback","claimingNft","setClaimingNft","claimNFTs","_amount","mint","send","gasLimit","toString","to","from","utils","toWei","once","receipt","Whitelist","prototype","hashCode","hash","this","charCodeAt","addEventListener","currentProvider","isMetaMask","getAccounts","Early","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"uh2nBA4BeA,MA1Bf,WAEE,OAEE,wBAAQC,GAAG,SAASC,UAAU,qBAA9B,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKD,GAAG,OAAOC,UAAU,YAAzB,SACE,6BAAI,oBAAGC,KAAK,IAAID,UAAU,WAAtB,UAAiC,wCAAjC,cAIN,qBAAKD,GAAG,qBAAR,SACE,qBAAIC,UAAU,WAAd,UACE,6BAAI,mBAAGC,KAAK,eAAR,qBACJ,6BAAI,mBAAGA,KAAK,QAAR,oBACJ,6BAAI,mBAAGA,KAAK,WAAR,uBACJ,6BAAI,mBAAGA,KAAK,OAAR,mBACJ,6BAAI,mBAAGA,KAAK,WAAR,oBACJ,6BAAI,mBAAGA,KAAK,gCAAgCC,OAAO,SAASC,IAAI,aAA5D,+BCpBD,MAA0B,qCCwB1BC,MArBf,WAEE,OAEI,yBAASL,GAAG,OAAOC,UAAU,wCAA7B,SACE,sBAAKA,UAAU,iBAAf,UACE,0CACA,mEACA,qBAAKK,IAAKC,EAAUC,IAAI,cACxB,uBACA,yFACA,2DACA,uBACA,sBAAKP,UAAU,OAAf,UACE,mBAAGC,KAAK,kCAAkCC,OAAO,SAASC,IAAI,aAA9D,sBACA,mBAAGF,KAAK,gCAAgCC,OAAO,SAASC,IAAI,aAA5D,+BClBG,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,oCCqD1BK,MAhDf,WAEI,OACA,mCACA,0BAAST,GAAG,cAAcC,UAAU,wCAApC,UACI,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,oDACA,qBAAKK,IAAKI,EAAQF,IAAI,gBACtB,uBAHF,KAGS,uBACP,uZAGA,+eAEA,2BAGJ,qBAAKP,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,gBAAf,UAEE,qBAAKK,IAAKK,EAAOH,IAAI,MAAMP,UAAU,cACrC,+CACA,0JAGJ,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKK,IAAKM,EAAQJ,IAAI,MAAMP,UAAU,cACtC,kDACA,mJAGJ,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKK,IAAKO,EAASL,IAAI,MAAMP,UAAU,cACvC,gDACA,gJC5CD,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BC2D1Ba,MAtDf,WAEI,OACA,mCACE,0BAASd,GAAG,OAAOC,UAAU,wCAA7B,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,kDAGJ,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKK,IAAKS,EAAOd,UAAU,iBAAiBO,IAAI,QAChD,sBAAKP,UAAU,eAAf,UACE,2CACA,oDAIN,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKK,IAAKU,EAAOf,UAAU,iBAAiBO,IAAI,QAChD,sBAAKP,UAAU,eAAf,UACE,4CACA,mDAIN,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKK,IAAKW,EAAOhB,UAAU,iBAAiBO,IAAI,QAChD,sBAAKP,UAAU,eAAf,UACE,6CACA,mDAIN,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKK,IAAKY,EAAOjB,UAAU,iBAAiBO,IAAI,QAChD,sBAAKP,UAAU,eAAf,UACE,qDACA,8DCjDH,MAA0B,qCCA1B,MAA0B,0CCA1B,MAA0B,wCCA1B,MAA0B,mCCgF1BkB,MA1Ef,WAEI,OACA,mCAEE,0BAASnB,GAAG,UAAUC,UAAU,wCAAhC,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,kDAGJ,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKK,IAAKc,EAAUZ,IAAI,MAAMP,UAAU,cACxC,4CACA,uGAGJ,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKK,IAAKe,EAAOb,IAAI,MAAMP,UAAU,cACrC,4CACA,2GAGJ,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKK,IAAKgB,EAAMd,IAAI,MAAMP,UAAU,cACpC,4CACA,+FAGJ,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKK,IAAKiB,EAAQf,IAAI,MAAMP,UAAU,cACtC,6CACA,4GAIN,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,wCACA,4EAGJ,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,wCACA,uDAGJ,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,wCACA,iGAGJ,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,wCACA,8FCmBDuB,MAvFf,WAEI,OACJ,mCACA,yBAASxB,GAAG,MAAMC,UAAU,wCAA5B,SACQ,sBAAKA,UAAU,YAAf,UACA,qCACE,uBAEA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,gBAAf,UACJ,oDAGA,+HAOJ,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,gBAAf,UACJ,2DAGA,+KAOA,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,gBAAf,UACJ,wEAGA,mKAMA,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,gBAAf,UACJ,6DAGA,4LAMA,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,gBAAf,UACJ,qEAGA,iOAMA,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,gBAAf,UACJ,gEAGE,mQCjDGwB,I,EAAAA,EAvBf,WAEI,OACJ,mCACA,wBAAQxB,UAAU,SAAlB,SACQ,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oFACA,qBAAKA,UAAU,UAAf,SAOE,mBAAGC,KAAK,6BAAR,uC,iDCTcwB,IAAOC,OAAV,oWAsBV,SAASC,IAEtB,IAAMC,EAAMC,OAAOC,cAAS,IAC5B,EAAqBC,mBAAS,CAC5BC,IAAI,GACJC,SAAS,GACTC,MAAM,GACNC,MAAM,GACNC,KAAK,GACLC,KAAK,KANP,mBAAOC,EAAP,KAAYC,EAAZ,KAyCA,GA9BAC,qBAAU,WACRC,SAASC,MAAQ,aAChB,IAIHF,qBAAU,WACRG,IAAMC,IAAI,UAAYhB,EAAM,SACvBiB,MAAK,SAAAC,GAEF,IAAIC,EAASD,EAAIR,KAGjBC,EAAQ,CAACP,IAAIe,EAASf,IACpBC,SAASc,EAASC,WAAW,GAAGC,MAChCf,MAAMa,EAASC,WAAW,GAAGC,MAC7Bd,MAAMY,EAASC,WAAW,GAAGC,MAC7Bb,KAAKW,EAASC,WAAW,GAAGC,MAC5BZ,KAAKU,EAASC,WAAW,GAAGC,WAGjCC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,QAEpB,IAMU,KAARvB,GAAc0B,OAAO1B,GAAO,KAAM,CACpC,IAAM2B,EAAS,UAAY3B,EAAM,OACjC,OACA,mCACE,0BAAS7B,GAAG,OAAOC,UAAU,wCAA7B,UACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,4BAAf,SACE,2CAAc4B,SAGlB,qBAAK5B,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKK,IAAKkD,EAAQvD,UAAU,iBAAiBO,IAAI,QACjD,qBAAKP,UAAU,eAAf,SACE,wCAAWsC,EAAKD,eAItB,qBAAKrC,UAAU,6BAAf,SACE,sBAAKA,UAAU,oBAAoB,aAAW,OAAOwD,MAAM,SAA3D,UAEE,8CAGA,kCACE,gCACE,+BACE,8CACA,+CAGJ,kCACE,+BACE,0CACA,6BAAKlB,EAAKL,cAEZ,+BACE,uCACA,6BAAKK,EAAKJ,WAEZ,+BACE,uCACA,6BAAKI,EAAKH,WAEZ,+BACE,sCACA,6BAAKG,EAAKF,UAEZ,+BACE,uCACA,+D,6GC9HhBqB,GAAe,CACnBC,SAAS,EACTC,QAAS,KACTC,cAAe,KACfC,KAAM,KACNC,SAAU,IAkCGC,GA/BW,WAAmC,IAAlCC,EAAiC,uDAAzBP,GAAcQ,EAAW,uCAC1D,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BACFT,IADL,IAEEC,SAAS,IAEb,IAAK,qBACH,OAAO,6BACFM,GADL,IAEEN,SAAS,EACTC,QAASM,EAAOE,QAAQR,QACxBC,cAAeK,EAAOE,QAAQP,cAC9BC,KAAMI,EAAOE,QAAQN,OAEzB,IAAK,oBACH,OAAO,6BACFJ,IADL,IAEEC,SAAS,EACTI,SAAUG,EAAOE,UAErB,IAAK,iBACH,OAAO,6BACFH,GADL,IAEEL,QAASM,EAAOE,QAAQR,UAE5B,QACE,OAAOK,ICnCPP,GAAe,CACnBC,SAAS,EACTU,KAAM,GACNC,OAAO,EACPP,SAAU,IA4BGQ,GAzBK,WAAmC,IAAlCN,EAAiC,uDAAzBP,GAAcQ,EAAW,uCACpD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,6BACFT,IADL,IAEEC,SAAS,IAEb,IAAK,qBACH,OAAO,6BACFD,IADL,IAEEC,SAAS,EACTU,KAAMH,EAAOE,QAAQC,OAEzB,IAAK,oBACH,OAAO,6BACFX,IADL,IAEEC,SAAS,EACTW,OAAO,EACPP,SAAUG,EAAOE,UAErB,QACE,OAAOH,ICvBPO,GAAcC,YAAgB,CAClCC,WAAYV,GACZzB,KAAMgC,KAGFI,GAAa,CAACC,KACdC,GAAmBC,YAAQC,IAAe,WAAf,EAAmBJ,KAQrCK,GALNC,YAAYT,GAAaK,ICE5BK,GAAkB,SAACd,GACvB,MAAO,CACLD,KAAM,oBACNC,QAASA,IAIAe,GAAY,SAACvB,GACxB,8CAAO,WAAOwB,GAAP,eAAAC,EAAA,6DACLD,EArBK,CACLjB,KAAM,uBAmBD,kBAGca,GACdM,WACAZ,WAAWb,cAAc0B,QAAQlB,OACjCmB,OANA,OAGCnB,EAHD,OAQHe,EAtBG,CACLjB,KAAM,qBACNC,QAqBqB,CACfC,UAVD,gDAcHhB,QAAQC,IAAR,MACA8B,EAASF,GAAgB,uCAftB,yDAAP,uDCLIO,GAAgB,SAACrB,GACrB,MAAO,CACLD,KAAM,oBACNC,QAASA,IAWAsB,GAAU,WACrB,8CAAO,WAAON,GAAP,mBAAAC,EAAA,yDACLD,EA5BK,CACLjB,KAAM,wBA4BFwB,OAAOC,SAFN,wBAGC9B,EAAO,IAAI+B,IAAKF,OAAOC,UAHxB,kBAKsBD,OAAOC,SAASE,QAAQ,CAC7CC,OAAQ,wBANT,cAKKC,EALL,gBAQuBL,OAAOC,SAASE,QAAQ,CAC9CC,OAAQ,gBATT,OAWgB,GAXhB,QAYOE,EAAmB,IAAInC,EAAKoC,IAAIC,SACpCC,EAAcC,IACd,8CAIFjB,EAvCD,CACLjB,KAAM,qBACNC,QAsCuB,CACbR,QAASoC,EAAS,GAClBnC,cAAeoC,EACfnC,KAAMA,KAIV6B,OAAOC,SAASU,GAAG,mBAAmB,SAACN,GACrCZ,EAASmB,GAAcP,EAAS,QAElCL,OAAOC,SAASU,GAAG,gBAAgB,WACjCX,OAAOa,SAASC,aAIlBrB,EAASK,GAAc,wCAlCxB,kDAqCDL,EAASK,GAAc,0BArCtB,gCAwCHL,EAASK,GAAc,sBAxCpB,0DAAP,uDA6CWc,GAAgB,SAAC3C,GAC5B,8CAAO,WAAOwB,GAAP,SAAAC,EAAA,sDACLD,EAtDK,CACLjB,KAAM,iBACNC,QAoD8B,CAAER,QAASA,KACzCwB,EAASD,MAFJ,2CAAP,uD,OC7Ea,SAASuB,GAAMC,GAE5B,OACE,qBAAK1G,UAAU,6BAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKK,IAAKqG,EAAMC,MAAO3G,UAAU,iBAAiBO,IAAI,QACtD,sBAAKP,UAAU,eAAf,UACE,sCAAS0G,EAAME,SACf,6BAAI,mBAAG3G,KAAMyG,EAAMG,OAAf,oBACJ,6BAAI,mBAAG5G,KAAMyG,EAAMI,MAAf,6BCTQrF,IAAOsF,IAAV,2OAEG,gBAAGC,EAAH,EAAGA,MAAH,OAAgBA,EAAK,cAAUA,EAAV,KAAqB,UAUpCvF,IAAOsF,IAAV,2DAZlB,I,SAkBME,GAAcxF,IAAOsF,IAAV,6DAkBXG,IAZezF,IAAOsF,IAAV,6DAMEtF,IAAOsF,IAAV,6DAMCtF,IAAOsF,IAAV,+BCxBTI,ID4BY1F,IAAO2F,EAAV,6FAMM3F,IAAO2F,EAAV,6FAMM3F,IAAO2F,EAAV,6FAMG3F,IAAOsF,IAAV,iEC9CAtF,IAAOC,OAAV,uWAsBV,SAAS2F,KAEtB,IAAIC,GAAW,EAETnC,EAAWoC,cACX9C,EAAa+C,aAAY,SAACxD,GAAD,OAAWA,EAAMS,cAEhD,EAAyB1C,mBAAS,IAAlC,mBAAO0F,EAAP,KAAcC,EAAd,KACA,EAA6B3F,mBAAS,IAAtC,mBAAO4F,EAAP,KAAgBC,EAAhB,KAGApF,qBAAU,WACRqF,MAEC,CAACpD,EAAWd,UAEfnB,qBAAU,WACRC,SAASC,MAAQ,aAChB,IAKH,IAAMmF,EAAU,WACa,KAAvBpD,EAAWd,SAA+C,OAA7Bc,EAAWb,eAC1CuB,EAASD,GAAUT,EAAWd,WAI9BmE,EAAO,GA8BX,IAAMC,EAAU,CAACjC,OAAQ,OACzB,SAASkC,EAAUC,GACjB,GAAgB,GAAZX,EAAmB,CACrBA,GAAW,EACXQ,EAAO,GACT,IAAMI,EAAO,8CAA8CD,EAAK,uFAG5DtF,IAAMC,IAAIsF,EAAMH,GACflF,MAAK,SAAAC,GAGJ,IADA,IAAMqF,EAAMrF,EAAIR,KAAK8F,OAAOC,OAFnB,aAMP,IAAIzB,EAFM9D,EAAIR,KAAK8F,OAAOE,GAEVC,SACZ5B,EAAQ,gCAAkCC,EAAQ,OAExDjE,IAAMC,IAAI,gCAAkCgE,EAAQ,SACnD/D,MAAK,SAAA2F,GACA,IAAIC,EAAOD,EAAKlG,KAAKN,IAIjB0G,EAAS,CAAC9B,EAAOD,EAFR,oCAAoC8B,EACrC,kCAAkC7B,GAG9CkB,EAAKa,KAAKD,GAEVpB,GAAW,KAEdpE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OAnBVmF,EAAI,EAAGA,EAAIH,EAAKG,IAAK,KAsB7BhB,GAAS,EACTI,EAAUI,GA7DlB,WACE,IAAIc,EAAYnB,EAChB,GAAImB,EAAUP,OAAS,GAML,GAAZf,EAAkB,CACpB,IAAIuB,EAAUD,EAAUE,KAAI,SAACC,GAE3B,OAEE,cAACtC,GAAD,CAAOG,MAAOmC,EAAK,GAAIpC,MAAOoC,EAAK,GAAKlC,OAAQkC,EAAK,GAAIjC,MAAOiC,EAAK,QAGzEnB,EAAYiB,IA8CVG,KACA,IAAInG,KAEFyE,GAAS,IAQjB,OACE,mCACA,0BAASvH,GAAG,OAAOC,UAAU,wCAA7B,UAEM,gDAGoB,KAAvByE,EAAWd,SACmB,OAA7Bc,EAAWb,cACT,eAAC,GAAD,CAAaqF,GAAI,SAAUC,GAAI,SAA/B,UACI,cAAC,GAAD,IACF,cAAC,GAAD,CAAclJ,UAAU,2BACtBmJ,QAAS,SAACC,GACRA,EAAEC,iBACFlE,EAASM,MACToC,KAJJ,qBASyB,KAAxBpD,EAAWX,SACV,qCACE,cAAC,GAAD,IACGW,EAAWX,YAEd,QAGN,eAAC,GAAD,CAAamF,GAAI,SAAUC,GAAI,SAAUI,GAAI,MAA7C,UACG,cAAC,GAAD,IACD,cAAC,GAAD,CAActJ,UAAU,2BAEtBmJ,QAAS,SAACC,GACRA,EAAEC,iBACFxB,IACAG,EAAQvD,EAAWd,UALvB,SASI2D,EAAW,OAAS,eAExB,cAAC,GAAD,IACA,sDACM,cAAC,GAAD,IACN,qBAAKtH,UAAU,YAAf,SACJ,qBAAKA,UAAU,MAAf,SACC2H,cCzLI,SAAS4B,GAAO7C,GAC7B,IAAM8C,EAAUC,cAMhB,OACE,qBAAKzJ,UAAU,6BAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKK,IAAKqG,EAAMC,MAAO3G,UAAU,iBAAiBO,IAAI,MAAM4I,QAAS,SAACC,GACtDA,EAAEC,iBACFK,aAAaC,QAAQ,SAASjD,EAAMC,OARxD6C,EAAQb,KAAK,gBAYT,qBAAK3I,UAAU,eAAf,SACE,+BAAK0G,EAAMkD,KAAX,KAAmBlD,EAAME,gBCN5B,IAAMO,GAAe1F,IAAOC,OAAV,sWAiBDD,IAAOC,OAAV,sWA+MNmI,I,GAAAA,GA5Lf,WACE,IAAM1E,EAAWoC,cACX9C,EAAa+C,aAAY,SAACxD,GAAD,OAAWA,EAAMS,cAGhD,EAAsC1C,oBAAS,GAA/C,mBAAO+H,EAAP,KAEA,GAFA,KAE2C/H,mBAAS,KAApD,mBAAOgI,EAAP,KAAuBC,EAAvB,KACI1C,GAAW,EAIX2C,EAAO,GAyCX,SAASjC,EAAUC,GACjB,GAAgB,GAAZX,EAAmB,CACrBA,GAAW,EACX2C,EAAO,GACP,IACM/B,EAAO,8CAA8CD,EAAK,qBAG9DtF,IAAMC,IAAIsF,EAJI,CAACpC,OAAQ,QAKtBjD,MAAK,SAAAC,GAKJ,IAHA,IAAMqF,EAAMrF,EAAIR,KAAK8F,OAAOC,OAGpBC,EAAI,EAAGA,EAAIH,EAAKG,IAAK,CAE3B,IAAI4B,EAAMpH,EAAIR,KAAK8F,OAAOE,GAMtB6B,GADAD,EAAMpH,EAAIR,KAAK8F,OAAOE,IACXsB,KACXhD,EAAQsD,EAAI3B,SACZ5B,EAAQuD,EAAIE,UACZC,EAAU,CAACF,EAAMvD,EAAOD,GAExB2B,EAAEH,GAAOG,EAAIH,EAAI,GACnBuB,aAAaC,QAAQ,KAAKxB,EAAIG,GAAG3B,GAGnCsD,EAAKtB,KAAK0B,GAGZ/C,GAAS,EAvEjB,SAAkBgD,GAChB,IAAI1B,EAAY0B,EAChB,GAAI1B,EAAUP,OAAS,GAML,GAAZf,EAAkB,CAEpB,IAAIuB,EAAUD,EAAUE,KAAI,SAACC,GAE3B,OAEE,cAACQ,GAAD,CAAQK,KAAMb,EAAK,GAAInC,MAAOmC,EAAK,GAAIpC,MAAOoC,EAAK,QAavDiB,EAAmBnB,IAiDjBG,CAASiB,KAOT,IAAIpH,KAGFyE,GAAS,IAYnB,IAAMO,EAAU,WACa,KAAvBpD,EAAWd,SAA+C,OAA7Bc,EAAWb,eAC1CuB,EAASD,GAAUT,EAAWd,WAYlC,OARAnB,qBAAU,WACRqF,MACC,CAACpD,EAAWd,UAEfnB,qBAAU,WACRC,SAASC,MAAQ,aAChB,IAGD,8BACE,0BAAS3C,GAAG,OAAOC,UAAU,wCAA7B,UACU,mDAEwB,KAAvByE,EAAWd,SACiB,OAA7Bc,EAAWb,cACT,eAAC,GAAD,CAAaqF,GAAI,SAAUC,GAAI,SAA/B,UACE,cAAC,GAAD,IAEA,cAAC,GAAD,CAAclJ,UAAU,2BACtBmJ,QAAS,SAACC,GACRA,EAAEC,iBACFlE,EAASM,MACToC,KAJJ,qBASyB,KAAxBpD,EAAWX,SACV,qCACE,cAAC,GAAD,IACA,4BAAIW,EAAWX,cAEf,QAIN,eAAC,GAAD,CAAamF,GAAI,SAAUC,GAAI,SAAUI,GAAI,MAA7C,UAEM,cAAC,GAAD,IACJ,cAAC,GAAD,CAActJ,UAAU,2BACtBuK,SAAUT,EAAc,EAAI,EAC5BX,QAAS,SAACC,GACRA,EAAEC,iBACFxB,IACAG,EAAQvD,EAAWd,UALvB,SAQGmG,EAAc,OAAS,eAG1B,sDACA,cAAC,GAAD,IACA,qBAAK9J,UAAU,YAAf,SACA,qBAAKA,UAAU,MAAf,SAEC+J,eCxNR5C,GAAe1F,IAAOC,OAAV,sWA8HV8I,OA7Gf,WACE,IAAMrF,EAAWoC,cACX9C,EAAa+C,aAAY,SAACxD,GAAD,OAAWA,EAAMS,cAEhD,EAAgC1C,mBAAS,IAAzC,mBAAO0I,EAAP,KAAiBC,EAAjB,KACA,EAAsC3I,oBAAS,GAA/C,mBAAO4I,EAAP,KAAoBC,EAApB,KAEMC,EAAY,SAACC,GACbA,GAAW,IAKfJ,EAAY,mCACZE,GAAe,GACfnG,EAAWb,cAAc0B,QACtByF,KAAKtG,EAAWd,QAASmH,GACzBE,KAAK,CACJC,UAAW,MAASH,GAASI,WAC7BC,GAAI,6CACJC,KAAM3G,EAAWd,QACjBV,MAAOwB,EAAWZ,KAAKwH,MAAMC,OAAO,IAAOR,GAASI,WAAY,WAEjEK,KAAK,SAAS,SAACpI,GACdC,QAAQC,IAAIF,GACZuH,EAAY,uDACZE,GAAe,MAEhB/H,MAAK,SAAC2I,GACLd,EACE,sFAEFE,GAAe,GACfzF,EAASD,GAAUT,EAAWd,eAI9BkE,EAAU,WACa,KAAvBpD,EAAWd,SAA+C,OAA7Bc,EAAWb,eAC1CuB,EAASD,GAAUT,EAAWd,WAYlC,OARAnB,qBAAU,WACRqF,MACC,CAACpD,EAAWd,UAEfnB,qBAAU,WACRC,SAASC,MAAQ,aAChB,IAGD,8BACoC,KAAvB+B,EAAWd,SACiB,OAA7Bc,EAAWb,cACT,eAAC,GAAD,CAAaqF,GAAI,SAAUC,GAAI,SAA/B,UAGE,cAAC,GAAD,CAAclJ,UAAU,2BACtBmJ,QAAS,SAACC,GACRA,EAAEC,iBACFlE,EAASM,MACToC,KAJJ,qBASyB,KAAxBpD,EAAWX,SACV,qCACE,cAAC,GAAD,IACA,4BAAIW,EAAWX,cAEf,QAIN,eAAC,GAAD,CAAamF,GAAI,SAAUC,GAAI,SAAUI,GAAI,MAA7C,UAEM,cAAC,GAAD,IACJ,cAAC,GAAD,CAActJ,UAAU,2BACtBuK,SAAUI,EAAc,EAAI,EAC5BxB,QAAS,SAACC,GACRA,EAAEC,iBACFwB,EAAU,KACVhD,KALJ,SAQG8C,EAAc,OAAS,wBAE1B,cAAC,GAAD,CAAc3K,UAAU,2BACtBuK,SAAUI,EAAc,EAAI,EAC5BxB,QAAS,SAACC,GACRA,EAAEC,iBACFwB,EAAU,KACVhD,KALJ,SAQG8C,EAAc,OAAS,wBAE1B,cAAC,GAAD,IACE,4BAAIF,UCzDXgB,I,GAAAA,GA9Df,WACE,IAAM7J,EAAMC,OAAOC,cAAS,MAG5BD,OAAO6J,UAAUC,SAAW,WAE1B,IADA,IAAIC,EAAO,EACFtD,EAAI,EAAGA,EAAIuD,KAAKxD,OAAQC,IAAK,CAElCsD,GAASA,GAAM,GAAGA,EADFC,KAAKC,WAAWxD,GAEhCsD,GAAcA,EAElB,OAAOA,GAMX,MAAgC7J,mBAAS,IAAzC,mBAAO0I,EAAP,KAAiBC,EAAjB,KAgCE,OA/BFhF,OAAOqG,iBAAiB,QAAQ,WACV,qBAATlI,OACP6B,OAAO7B,KAAO,IAAI+B,IAAKF,OAAO7B,KAAKmI,kBAEY,IAA3CtG,OAAO7B,KAAKmI,gBAAgBC,YAC5BvG,OAAO7B,KAAKoC,IAAIiG,aAAY,SAAC7H,EAAO0B,GACT,GAAnBA,EAASsC,OAETjF,QAAQC,IAAI,QAKZD,QAAQC,IAAIxB,OAAOkE,GAAU4F,YAC7BjB,EAAY7I,OAAOkE,GAAU4F,oBAmBzC,yBAAS5L,GAAG,OAAOC,UAAU,wCAA7B,SACE,sBAAKA,UAAU,iBAAf,UACE,0CACA,mEACA,qBAAKK,IAAKC,EAAUC,IAAI,cACxB,uBACAkK,EAAS7I,GAAK,GAAY,YAAPA,GAA4B,YAAPA,EAAoB,8BAAK,cAAC,GAAD,MAAqB,8BAAK,sECzDzEH,IAAOC,OAAV,oWAsGVyK,OAnFf,WAEAtK,OAAO6J,UAAUC,SAAW,WAExB,IADA,IAAIC,EAAO,EACFtD,EAAI,EAAGA,EAAIuD,KAAKxD,OAAQC,IAAK,CAElCsD,GAASA,GAAM,GAAGA,EADFC,KAAKC,WAAWxD,GAEhCsD,GAAcA,EAElB,OAAOA,GAMX,MAAgC7J,mBAAS,IAAzC,mBAAO0I,EAAP,KAAiBC,EAAjB,KAiCA,OAhCAhF,OAAOqG,iBAAiB,QAAQ,WACV,qBAATlI,OACP6B,OAAO7B,KAAO,IAAI+B,IAAKF,OAAO7B,KAAKmI,kBAEY,IAA3CtG,OAAO7B,KAAKmI,gBAAgBC,YAC5BvG,OAAO7B,KAAKoC,IAAIiG,aAAY,SAAC7H,EAAO0B,GACT,GAAnBA,EAASsC,QAQTqC,EAAY7I,OAAOkE,GAAU4F,mBAa/CnJ,qBAAU,WACRC,SAASC,MAAQ,aAChB,IAID,8BAEI,yBAAS3C,GAAG,MAAMC,UAAU,wCAA5B,SACE,sBAAKA,UAAU,iBAAf,UACE,uBACA,wDACA,qBAAKK,IAAKC,EAAUC,IAAI,cACxB,uBAJF,IAIQ,uBACQ,KAAbkK,EACK,eAAC,GAAD,CAAaxB,GAAI,SAAUC,GAAI,SAA/B,UAEE,0EACA,0BAIF,cAAC,GAAD,CAAaD,GAAI,SAAUC,GAAI,SAAUI,GAAI,MAA7C,SACE,4BACA,mBAAGrJ,KAAM,UAAYwK,EAArB,4BAOlB,mBAAGxK,KAAK,UAAR,6B,SCzCkBmM,OA/BlB,WACE,OACI,8BAEE,cAAC,KAAD,UACE,cAAC,IAAD,UACA,eAAC,IAAD,CAAUrH,MAAOA,GAAjB,UACE,cAAC,EAAD,IACA,eAAC,IAAD,CAAOsH,OAAK,EAACC,KAAK,IAAlB,UAGI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAIJ,cAAC,IAAD,CAAOA,KAAK,cAAcC,UAAW5K,IACrC,cAAC,IAAD,CAAO2K,KAAK,YAAYC,UAAWlF,KACnC,cAAC,IAAD,CAAOiF,KAAK,cAAcC,UAAWd,KACrC,cAAC,IAAD,CAAOa,KAAK,WAAWC,UAAW1C,KAClC,cAAC,IAAD,CAAOyC,KAAK,UAAUC,UAAWJ,KACjC,cAAC,EAAD,cCzCGK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7J,MAAK,YAAkD,IAA/C8J,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCMdO,IAASC,OAEL,cAAC,GAAD,IAGFxK,SAASyK,eAAe,SAM1BV,O","file":"static/js/main.c15ddb77.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n\r\n  return (\r\n\r\n    <header id=\"header\" className=\"header header-hide\">\r\n      <div className=\"container\">\r\n        <div id=\"logo\" className=\"pull-left\">\r\n          <h1><a href=\"#\" className=\"scrollto\"><span>meta</span>maps</a></h1>\r\n          {/* Uncomment below if you prefer to use an image logo */}\r\n          {/* <a href=\"#body\"><img src=\"img/logo.png\" alt=\"\" title=\"\" /></a>*/}\r\n        </div>\r\n        <nav id=\"nav-menu-container\">\r\n          <ul className=\"nav-menu\">\r\n            <li><a href=\"#get-started\">About</a></li>\r\n            <li><a href=\"#team\">Team</a></li>\r\n            <li><a href=\"#Roadmap\">Roadmap</a></li>\r\n            <li><a href=\"#faq\">FAQ</a></li>\r\n            <li><a href=\"./avatar\">Play</a></li>\r\n            <li><a href=\"https://metamapsnft.com/demo/\" target=\"_blank\" rel=\"noreferrer\">Demo</a></li>\r\n          </ul>\r\n        </nav>{/* #nav-menu-container */}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n    \r\nexport default Header;","export default __webpack_public_path__ + \"static/media/hero-img.734246ce.png\";","import React from 'react';\r\n//import Minter from \"./Minter\";\r\nimport mainLogo from './../img/hero-img.png';\r\nfunction Hero() {\r\n\r\n  return (\r\n\r\n      <section id=\"hero\" className=\"padd-section text-center wow fadeInUp\">\r\n        <div className=\"hero-container\">\r\n          <h1>MetaMaps</h1>\r\n          <h2>Worlds for your NFTs to roam free</h2>\r\n          <img src={mainLogo} alt=\"Hero Imgs\" />\r\n          <br/>\r\n          <p>Early access closed. Whitelist currently open on Discord</p>\r\n          <p>Public minting in November</p>\r\n          <br/>\r\n          <div className=\"btns\">\r\n            <a href=\"https://twitter.com/metamapsnft\" target=\"_blank\" rel=\"noreferrer\"> Twitter</a>\r\n            <a href=\"https://discord.gg/Y2h5dPAhBb\" target=\"_blank\" rel=\"noreferrer\"> Discord</a>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\nexport default Hero;","export default __webpack_public_path__ + \"static/media/1.0ea26b63.gif\";","export default __webpack_public_path__ + \"static/media/2.3e4fe170.png\";","export default __webpack_public_path__ + \"static/media/3.a4df939b.png\";","export default __webpack_public_path__ + \"static/media/newDemo.67cde25b.png\";","import React from 'react';\r\nimport cloud from \"./../img/svg/1.gif\";\r\nimport planet from \"./../img/svg/2.png\";\r\nimport astroid from \"./../img/svg/3.png\"\r\nimport banner from \"./../img/newDemo.png\"\r\nfunction Intro() {\r\n\r\n    return(\r\n    <>\r\n    <section id=\"get-started\" className=\"padd-section text-center wow fadeInUp\">\r\n        <div className=\"container\">\r\n          <div className=\"section-title text-center\">\r\n            <h2>What are MetaMaps?</h2>\r\n            <img src={banner} alt=\"Banner Imgs\" />\r\n            <br/>  <br/>\r\n            <p>MetaMaps is the first ever NFT collection of 10,000 unique and algorithmically generated map terrains that exist on the Ethereum blockchain. Each map will be a place where different NFT PFP collections could gather for their new adventures. For the first time, PFP NFTs don't have to just be your twitter profile pics. Building and exploring cross-collection adventure maps.\r\n            </p>\r\n           \r\n            <p> Our MetaMap generator randomizes the composition of terrains to produce time-based 1/1 unique maps, each ready to be built into a new adventure and each evolving over time. As soon as a new map is drawn, you'd want to start exploring.\r\n              Some maps are rarer than others (with purple gems), but they are all unique. There are a few maps that are very special, the ultra-rares. If you are fortunate enough to mint one of these maps, you better hold onto the riches. </p>\r\n            <p />\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 col-lg-4\">\r\n              <div className=\"feature-block\">\r\n                \r\n                <img src={cloud} alt=\"img\" className=\"img-fluid\" />\r\n                <h4>Self evolving</h4>\r\n                <p>Uniquely randomized weather and events change each map, with rich features decided upon by token holders (explorers)</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-lg-4\">\r\n              <div className=\"feature-block\">\r\n                <img src={planet} alt=\"img\" className=\"img-fluid\" />\r\n                <h4>Interoperability</h4>\r\n                <p>NFT characters and items from other projects would be compatible with MetaMap, as well as derivative projects</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-lg-4\">\r\n              <div className=\"feature-block\">\r\n                <img src={astroid} alt=\"img\" className=\"img-fluid\" />\r\n                <h4>Full ownership</h4>\r\n                <p>Owners have full rights to use the map terrain data, including building other derivative worlds</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>      \r\n    </>\r\n    )}\r\n    \r\nexport default Intro;","export default __webpack_public_path__ + \"static/media/1.442b0f76.png\";","export default __webpack_public_path__ + \"static/media/2.0fb0d58d.png\";","export default __webpack_public_path__ + \"static/media/3.ded7d4ab.png\";","export default __webpack_public_path__ + \"static/media/4.b8360c98.png\";","import React from 'react';\r\nimport team1 from './../img/team/1.png';\r\nimport team2 from './../img/team/2.png';\r\nimport team3 from './../img/team/3.png';\r\nimport team4 from './../img/team/4.png';\r\nfunction Team() {\r\n\r\n    return(\r\n    <>\r\n      <section id=\"team\" className=\"padd-section text-center wow fadeInUp\">\r\n        <div className=\"container\">\r\n          <div className=\"section-title text-center\">\r\n            <h2>Team Members</h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 col-md-4 col-lg-3\">\r\n              <div className=\"team-block bottom\">\r\n                <img src={team3} className=\"img-responsive\" alt=\"img\" />\r\n                <div className=\"team-content\">\r\n                  <span>Founder</span>\r\n                  <h4>pencil.eth</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-md-4 col-lg-3\">\r\n              <div className=\"team-block bottom\">\r\n                <img src={team2} className=\"img-responsive\" alt=\"img\" />\r\n                <div className=\"team-content\">\r\n                  <span>Designer</span>\r\n                  <h4>helio.eth</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-md-4 col-lg-3\">\r\n              <div className=\"team-block bottom\">\r\n                <img src={team1} className=\"img-responsive\" alt=\"img\" />\r\n                <div className=\"team-content\">\r\n                  <span>Developer</span>\r\n                  <h4>maths.eth</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-md-4 col-lg-3\">\r\n              <div className=\"team-block bottom\">\r\n                <img src={team4} className=\"img-responsive\" alt=\"img\" />\r\n                <div className=\"team-content\">\r\n                  <span>Community Manager</span>\r\n                  <h4>folks.eth</h4>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n)}\r\n    \r\nexport default Team;","export default __webpack_public_path__ + \"static/media/asteroid.1f9a2fe6.svg\";","export default __webpack_public_path__ + \"static/media/paint-palette.7a5f584a.svg\";","export default __webpack_public_path__ + \"static/media/design-tool.a7d6dbc6.svg\";","export default __webpack_public_path__ + \"static/media/vector.fa8c83fc.svg\";","import React from 'react';\r\nimport asteroid from \"./../img/svg/asteroid.svg\";\r\nimport paint from \"./../img/svg/paint-palette.svg\";\r\nimport tool from \"./../img/svg/design-tool.svg\";\r\nimport vector from \"./../img/svg/vector.svg\";\r\n\r\nfunction Roadmap() {\r\n\r\n    return (\r\n    <>\r\n\r\n      <section id=\"Roadmap\" className=\"padd-section text-center wow fadeInUp\">\r\n        <div className=\"container\">\r\n          <div className=\"section-title text-center\">\r\n            <h2>Map of Roads</h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 col-lg-3\">\r\n              <div className=\"feature-block\">\r\n                <img src={asteroid} alt=\"img\" className=\"img-fluid\" />\r\n                <h4>25% Minted</h4>\r\n                <p>Airdrop maps to our most loyal early explorers (Lottery or MATIC)</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-lg-3\">\r\n              <div className=\"feature-block\">\r\n                <img src={paint} alt=\"img\" className=\"img-fluid\" />\r\n                <h4>50% Minted</h4>\r\n                <p>Build out NFT compatible 3D metaverses, decided upon by our community</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-lg-3\">\r\n              <div className=\"feature-block\">\r\n                <img src={tool} alt=\"img\" className=\"img-fluid\" />\r\n                <h4>75% Minted</h4>\r\n                <p>Open-source terrain data for other projects to build upon</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-lg-3\">\r\n              <div className=\"feature-block\">\r\n                <img src={vector} alt=\"img\" className=\"img-fluid\" />\r\n                <h4>100% Minted</h4>\r\n                <p>Start development of map evolution mechanism (e.g. weather, events)</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 col-lg-3\">\r\n              <div className=\"feature-block\">\r\n                <h4>+ more</h4>\r\n                <p>Regular updates + live demo to try out</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-lg-3\">\r\n              <div className=\"feature-block\">\r\n                <h4>+ more</h4>\r\n                <p>2d MetaMaps games</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-lg-3\">\r\n              <div className=\"feature-block\">\r\n                <h4>+ more</h4>\r\n                <p>MetaMaps treasure hunt with rewards and NFT art exhibitions</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-lg-3\">\r\n              <div className=\"feature-block\">\r\n                <h4>+ more</h4>\r\n                <p>Floor sweeps using secondary sales royalties</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n    </>\r\n)}\r\n    \r\nexport default Roadmap;","import React from 'react';\r\n\r\nfunction Faq() {\r\n\r\n    return (\r\n<>\r\n<section id=\"faq\" className=\"padd-section text-center wow fadeInUp\">\r\n        <div className=\"container\">\r\n        <h1>FAQ</h1>\r\n          <br/>            \r\n          \r\n          <div className=\"row\">\r\n              <div className=\"col-md-6 col-lg-4\">\r\n                  <div className=\"feature-block\">\r\n              <h4>\r\n                What are MetaMaps?\r\n              </h4>\r\n              <p>\r\n              The first ever collection of 10,000 metaverse map NFTs living on the Ethereum Blockchain. \r\n              </p>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-6 col-lg-4\">\r\n              <div className=\"feature-block\">\r\n          <h4>\r\n            How are MetaMaps created?\r\n          </h4>\r\n          <p>\r\n          Our MetaMap generator randomizes the composition of terrains to\r\n          produce time-based 1/1 unique maps, each evolving over time (coming soon)\r\n          </p>\r\n          </div>\r\n      </div>\r\n\r\n          <div className=\"col-md-6 col-lg-4\">\r\n              <div className=\"feature-block\">\r\n          <h4>\r\n            What devices are supported by MetaMaps\r\n          </h4>\r\n          <p>\r\n          Both Mobile and Desktop are supported for minting. At initial metaverse release, only Desktop will be supported for gameplay.\r\n          </p>\r\n          </div>\r\n      </div>\r\n\r\n          <div className=\"col-md-6 col-lg-4\">\r\n              <div className=\"feature-block\">\r\n          <h4>\r\n            What does ownership entail?\r\n          </h4>\r\n          <p>\r\n          Ownership includes creative and commercial rights to your MetaMap (+ derivative works), allowing you to decide who could access your MetaMap universe.\r\n          </p>\r\n          </div>\r\n      </div>\r\n\r\n          <div className=\"col-md-6 col-lg-4\">\r\n              <div className=\"feature-block\">\r\n          <h4>\r\n            How are MetaMaps Rarity determined?\r\n          </h4>\r\n          <p>\r\n            Purple Gems are the only rarity factor beyond the unique 1/1 layout of the MetaMap itself. Other MetaMaps attributes are terrain information, such as altitudes of different terrain types.\r\n            </p>\r\n            </div>\r\n      </div>\r\n\r\n          <div className=\"col-md-6 col-lg-4\">\r\n              <div className=\"feature-block\">\r\n          <h4>\r\n          Compatability with other NFTs? \r\n          </h4>\r\n            <p>\r\n            We will be developing a proof of concept metaverse where 2d PFP could be loaded onto playable characters and other artworks could be displayed within your MetaMap. Support for 3D voxels are also down the track.\r\n            </p>\r\n            </div>\r\n      </div>\r\n\r\n              \r\n      </div>\r\n      </div>\r\n        \r\n      </section>     \r\n        </>\r\n    )\r\n          };\r\n\r\nexport default Faq;","import React from 'react';\r\n\r\nfunction Footer() {\r\n\r\n    return(    \r\n<>\r\n<footer className=\"footer\">\r\n        <div className=\"copyrights\">\r\n          <div className=\"container\">\r\n            <p>© Copyrights MetaMaps 2021. All rights reserved.</p>\r\n            <div className=\"credits\">\r\n              {/*\r\n            All the links in the footer should remain intact.\r\n            You can delete the links only if you purchased the pro version.\r\n            Licensing information: https://bootstrapmade.com/license/\r\n            Purchase the pro version with working PHP/AJAX contact form: https://bootstrapmade.com/buy/?theme=MetaMaps\r\n          */}\r\n              <a href=\"https://bootstrapmade.com/\">BootstrapMade</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n</>\r\n    )}\r\n    \r\nexport default Footer;","import React, { useEffect, useState} from \"react\";\r\nimport { withRouter, useParams } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\n\r\nimport styled from \"styled-components\";\r\n//import { create } from \"ipfs-http-client\";\r\n\r\nexport const StyledButton = styled.button`\r\n  font-family: \"Roboto\", sans-serif;\r\n  text-transform: uppercase;\r\n  font-weight: 400;\r\n  font-size: 13px;\r\n  letter-spacing: 1px;\r\n  display: inline-block;\r\n  padding: 11px 36px;\r\n  border-radius: 50px;\r\n  transition: 0.5s;\r\n  margin-bottom: 30px;\r\n  border: 2px solid #71c55d;\r\n\r\n  color: #71c55d;\r\n  text-decoration: none;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Detail() {\r\n  \r\n  const id2 = String(useParams()['id']);\r\n  const [data,setData]=useState({\r\n    dna:'',\r\n    mountain:'',\r\n    trees:'',\r\n    grass:'',\r\n    sand:'',\r\n    gems:'',\r\n  }\r\n  );\r\n\r\n  \r\n  useEffect(() => {\r\n    document.title = \"MetaMaps\";\r\n  }, []);\r\n  \r\n\r\n\r\n  useEffect(()=>{\r\n    axios.get(\"./maps/\" + id2 + \".json\")\r\n        .then(res=>{\r\n            //console.log(res)\r\n            let attrData=res.data;\r\n            \r\n\r\n            setData({dna:attrData.dna, \r\n              mountain:attrData.attributes[0].value,\r\n              trees:attrData.attributes[1].value,\r\n              grass:attrData.attributes[2].value,\r\n              sand:attrData.attributes[3].value,\r\n              gems:attrData.attributes[4].value})\r\n           \r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n  },[])\r\n\r\n\r\n\r\n\r\n\r\n  if (id2 !== \"\" && Number(id2) < 1515 ){\r\n    const imgurl = \"./maps/\" + id2 + \".png\";\r\n    return(\r\n    <>\r\n      <section id=\"team\" className=\"padd-section text-center wow fadeInUp\">\r\n        <div className=\"container\">\r\n          <div className=\"section-title text-center\">\r\n            <h2>MetaMap #{id2}</h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 col-md-4 col-lg-4\">\r\n              <div className=\"team-block bottom\">\r\n                <img src={imgurl} className=\"img-responsive\" alt=\"img\" />\r\n                <div className=\"team-content\">\r\n                  <h6>Gems: {data.gems}</h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6 col-md-4 col-lg-4\">\r\n              <div className=\"team-block bottom\" text-align=\"left\" align=\"center\">\r\n                \r\n                <h3>\r\n                Terrain Data\r\n                </h3>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Terrain Type</th>\r\n                      <th>Altitude</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Mountain</td>\r\n                      <td>{data.mountain}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Trees</td>\r\n                      <td>{data.trees}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Grass</td>\r\n                      <td>{data.grass}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Sand</td>\r\n                      <td>{data.sand}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Water</td>\r\n                      <td>0.00</td>\r\n                    </tr>\r\n                  </tbody>\r\n                  </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n    )\r\n  }\r\n\r\n  \r\n  \r\n  \r\n}","const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  name: \"\",\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        name: action.payload.name,\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let name = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.name()\r\n        .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          name,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3 from \"web3\";\r\nimport SmartContract from \"../../contracts/SmartContract.json\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    if (window.ethereum) {\r\n      let web3 = new Web3(window.ethereum);\r\n      try {\r\n        const accounts = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await window.ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        if (networkId == 1) { \r\n          const SmartContractObj = new web3.eth.Contract(\r\n            SmartContract.abi,\r\n            \"0x8236afC3447C55a499dc62D62080321563d47342\"\r\n            //NetworkData.address\r\n            //smart contract address\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          window.ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(\"Change network to Ethereum Mainnet.\"));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import React from 'react';\r\nimport '../App.css';\r\n\r\nexport default function Slide(props) {\r\n  //console.log(props)\r\n  return(\r\n    <div className=\"col-md-6 col-md-4 col-lg-4\">\r\n      <div className=\"team-block bottom\">\r\n        <img src={props.imgur} className=\"img-responsive\" alt=\"img\" />\r\n        <div className=\"team-content\">\r\n          <h4>Map {props.tokid}</h4>\r\n          <h6><a href={props.playur}>Play</a></h6>\r\n          <h6><a href={props.detur}>Stats</a></h6>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n    ","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--dark-grey);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--white);\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--white);\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--white);\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { withRouter, useParams } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"../redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"../redux/data/dataActions\";\r\n\r\nimport Slide from \"./Slide\";\r\n\r\nimport * as s from \"../styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport { NavItem } from \"react-bootstrap\";\r\n//import { create } from \"ipfs-http-client\";\r\n\r\nexport const StyledButton = styled.button`\r\n  font-family: \"Roboto\", sans-serif;\r\n  text-transform: uppercase;\r\n  font-weight: 400;\r\n  font-size: 13px;\r\n  letter-spacing: 1px;\r\n  display: inline-block;\r\n  padding: 11px 36px;\r\n  border-radius: 50px;\r\n  transition: 0.5s;\r\n  margin-bottom: 30px;\r\n  border: 2px solid #71c55d;\r\n\r\n  color: #71c55d;\r\n  text-decoration: none;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Profile() {\r\n  \r\n  let fetching = false\r\n\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  //const data = useSelector((state) => state.data);\r\n  const [stateZ,setStateZ]=useState(\"\");\r\n  const [bigTable,setBigTable]=useState(\"\");\r\n  \r\n\r\n  useEffect(() => {\r\n    getData();\r\n    //chkNFTs();\r\n  }, [blockchain.account]);\r\n  \r\n  useEffect(() => {\r\n    document.title = \"MetaMaps\";\r\n  }, []);\r\n  \r\n\r\n\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  var arrz = []\r\n  //const imgurl = \"./maps/\" + id2 + \".png\";\r\n\r\n\r\n  function chkArray(){\r\n    var tabletext = stateZ\r\n    if (tabletext.length > 3){\r\n      //console.log(fetching)\r\n      /**tabletext.map((item) => {\r\n        console.log(item.tokid)\r\n        \r\n      })*/\r\n      if (fetching == false){\r\n        let newData = tabletext.map((item) => {\r\n          //console.log(item)\r\n          return (\r\n            \r\n            <Slide tokid={item[0]} imgur={item[1]}  playur={item[2]} detur={item[3]}/>\r\n          )\r\n        })\r\n        setBigTable(newData)\r\n      }\r\n      \r\n      \r\n    }\r\n    \r\n  }\r\n\r\n  \r\n\r\n  const options = {method: 'GET'};\r\n  function chkNFTs  (addr) {\r\n    if (fetching == false) {\r\n      fetching = true\r\n      arrz = []\r\n    const req1 = \"https://api.opensea.io/api/v1/assets?owner=\"+addr+\"&asset_contract_address=0x8236afc3447c55a499dc62d62080321563d47342&offset=0&limit=50\"\r\n        //console.log(req1)\r\n\r\n        axios.get(req1, options)\r\n        .then(res=>{\r\n          //console.log(res.data.assets)\r\n          const lim = res.data.assets.length\r\n          for(var i = 0; i < lim; i++) {\r\n            var obj = res.data.assets[i];\r\n    \r\n            let tokid = obj.token_id;\r\n            let imgur = \"https://metamapsnft.com/maps/\" + tokid + \".png\"\r\n          \r\n          axios.get(\"https://metamapsnft.com/maps/\" + tokid + \".json\")\r\n          .then(res2=>{\r\n                let seed = res2.data.dna;\r\n                \r\n                let playur = \"https://metamapsnft.com/play/?id=\"+seed\r\n                let detur = \"https://metamapsnft.com/detail/\"+tokid\r\n                let newmap = [tokid, imgur, playur, detur]\r\n                \r\n                arrz.push(newmap)\r\n                //res = arr\r\n                fetching = false\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);\r\n            })\r\n          }\r\n          fetching=false\r\n          setStateZ(arrz)\r\n          chkArray()\r\n        },[]).then(\r\n            \r\n            fetching=false\r\n            \r\n        )\r\n      }\r\n    }\r\n    \r\n     \r\n      //...............\r\n    return(\r\n      <>\r\n      <section id=\"team\" className=\"padd-section text-center wow fadeInUp\">\r\n \r\n            <h2>Choose MetaMap</h2>\r\n  \r\n\r\n        {blockchain.account === \"\" ||\r\n          blockchain.smartContract === null ? (\r\n            <s.Container ai={\"center\"} jc={\"center\"}>\r\n                <s.SpacerSmall />\r\n              <StyledButton className=\"btn-get-started scrollto\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  dispatch(connect());                      \r\n                  getData();\r\n                }}\r\n              >\r\n                Connect\r\n              </StyledButton>\r\n              {blockchain.errorMsg !== \"\" ? (\r\n                <>\r\n                  <s.SpacerSmall />\r\n                    {blockchain.errorMsg}\r\n                </>\r\n              ) : null}\r\n            </s.Container>\r\n          ) : (\r\n            <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n               <s.SpacerSmall />\r\n              <StyledButton className=\"btn-get-started scrollto\"\r\n                \r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  getData();\r\n                  chkNFTs(blockchain.account)\r\n                  \r\n                }}\r\n              >\r\n                 {fetching ? \"BUSY\" : \"Fetch Maps\"}\r\n              </StyledButton>\r\n              <s.SpacerSmall />\r\n              <p>(Click twice to load)</p>\r\n                    <s.SpacerSmall />\r\n              <div className=\"container\">\r\n          <div className=\"row\">\r\n          {bigTable}\r\n            \r\n            </div></div>\r\n             \r\n                      \r\n                    \r\n            </s.Container>\r\n            \r\n          )}\r\n      </section>\r\n    </>\r\n  )\r\n \r\n  \r\n  \r\n}","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../App.css';\r\n\r\nexport default function Choice(props) {\r\n  const history = useHistory();\r\n\r\n  function handleClick() {\r\n    history.push(\"./profile\");\r\n  }\r\n  //console.log(props)\r\n  return(\r\n    <div className=\"col-md-6 col-md-4 col-lg-4\">\r\n      <div className=\"team-block bottom\">\r\n        <img src={props.imgur} className=\"img-responsive\" alt=\"img\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        localStorage.setItem('avatar',props.imgur)\r\n                        handleClick()\r\n                        //console.log(localStorage.getItem('avatar'))\r\n                      }}/>\r\n        <div className=\"team-content\">\r\n          <h4>{props.slug} #{props.tokid}</h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n    ","import React, { useEffect, useState} from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"../redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"../redux/data/dataActions\";\r\n\r\n\r\nimport axios from 'axios';\r\nimport Choice from \"./Choice\";\r\n\r\nimport * as s from \"../styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\n//import { create } from \"ipfs-http-client\";\r\nimport mainLogo from './../img/hero-img.png';\r\n\r\nexport const StyledButton = styled.button`\r\n  font-family: \"Roboto\", sans-serif;\r\n  text-transform: uppercase;\r\n  font-weight: 400;\r\n  font-size: 13px;\r\n  letter-spacing: 1px;\r\n  display: inline-block;\r\n  padding: 11px 36px;\r\n  border-radius: 50px;\r\n  transition: 0.5s;\r\n  margin-bottom: 30px;\r\n  border: 2px solid #71c55d;\r\n\r\n  color: #71c55d;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const RadioBtn = styled.button`\r\n  font-family: \"Roboto\", sans-serif;\r\n  text-transform: uppercase;\r\n  font-weight: 400;\r\n  font-size: 13px;\r\n  letter-spacing: 1px;\r\n  display: inline-block;\r\n  padding: 11px 36px;\r\n  border-radius: 50px;\r\n  transition: 0.5s;\r\n  margin-bottom: 30px;\r\n  border: 2px solid #71c55d;\r\n\r\n  color: #71c55d;\r\n  text-decoration: none;\r\n`;\r\n\r\n\r\n\r\nfunction Avatar() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  //const data = useSelector((state) => state.data);\r\n  //const [feedback, setFeedback] = useState(\"\");\r\n  const [checkingNft, setcheckingNft] = useState(false);\r\n\r\n  const [collectionTable,setcollectionTable]=useState(\"\");\r\n  let fetching = false\r\n\r\n\r\n\r\n  var arry = []\r\n  //const imgurl = \"./maps/\" + id2 + \".png\";\r\n\r\n\r\n  function chkArray(arrx){\r\n    var tabletext = arrx\r\n    if (tabletext.length > 3){\r\n      //console.log(fetching)\r\n      /**tabletext.map((item) => {\r\n        console.log(item.tokid)\r\n        \r\n      })*/\r\n      if (fetching == false){\r\n        \r\n        let newData = tabletext.map((item) => {\r\n          //console.log(item)\r\n          return (\r\n            \r\n            <Choice slug={item[0]} tokid={item[1]} imgur={item[2]} />\r\n          )\r\n        })\r\n\r\n        \r\n        /*\r\n        let newData = tabletext.map((item) => {\r\n          //console.log(item)\r\n          return (\r\n            \r\n            item + '<br/>'\r\n          )\r\n        }) */\r\n        setcollectionTable(newData)\r\n      }\r\n      \r\n      \r\n    }\r\n    \r\n  }\r\n\r\n  \r\n\r\n  function chkNFTs  (addr) {\r\n    if (fetching == false) {\r\n      fetching = true\r\n      arry = []\r\n      const options = {method: 'GET'};\r\n      const req1 = 'https://api.opensea.io/api/v1/assets?owner='+addr+'&offset=0&limit=50'\r\n        //console.log(req1)\r\n\r\n        axios.get(req1, options)\r\n        .then(res=>{\r\n          //console.log(res.data.assets)\r\n          const lim = res.data.assets.length\r\n          \r\n          //let newface = \"\"\r\n          for(var i = 0; i < lim; i++) {\r\n                // only display non spam nfts floor price more than 0.009 and collection count more than 99 and owners more than 99\r\n            var obj = res.data.assets[i];\r\n            //console.log()\r\n            //href=\"https://opensea.io/collection/\"+obj.slug\r\n            //console.log(obj.image_url)\r\n            \r\n            var obj = res.data.assets[i];\r\n            let coll = obj.slug\r\n            let tokid = obj.token_id;\r\n            let imgur = obj.image_url\r\n            let newface = [coll, tokid, imgur]\r\n            \r\n            if (i<lim && i > lim-5){\r\n              localStorage.setItem(\"m\"+(lim-i),imgur)\r\n            }\r\n    \r\n            arry.push(newface)\r\n          \r\n          }\r\n          fetching=false\r\n       \r\n          \r\n          //console.log(localStorage.getItem(\"m5\"))\r\n          \r\n          chkArray(arry)\r\n          \r\n          \r\n          \r\n          //arrz = arrz.flat\r\n          //dispatch(arr)\r\n          //console.log(dataZ)\r\n        },[]).then(\r\n            //console.log (arrz)\r\n            \r\n            fetching=false\r\n            \r\n        ) \r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n  \r\n  useEffect(() => {\r\n    document.title = \"MetaMaps\";\r\n  }, []);\r\n\r\n  return (\r\n    <div>  \r\n      <section id=\"team\" className=\"padd-section text-center wow fadeInUp\">\r\n                <h2>Choose NFT Avatar</h2>\r\n\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n                    <s.SpacerSmall />\r\n              \r\n                    <StyledButton className=\"btn-get-started scrollto\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      CONNECT\r\n                    </StyledButton>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <p>{blockchain.errorMsg}</p>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  \r\n                  <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                    \r\n                        <s.SpacerSmall />\r\n                    <StyledButton className=\"btn-get-started scrollto\"\r\n                      disabled={checkingNft ? 1 : 0}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        getData();\r\n                        chkNFTs(blockchain.account);\r\n                      }}\r\n                     >\r\n                      {checkingNft ? \"BUSY\" : \"Fetch NFTs\"}\r\n                     \r\n                    </StyledButton>\r\n                    <p>(Click twice to load)</p>\r\n                    <s.SpacerSmall />\r\n                    <div className=\"container\">\r\n                    <div className=\"row\">\r\n                   \r\n                    {collectionTable}\r\n                   \r\n                    \r\n                      \r\n                      </div></div>\r\n                  </s.Container>\r\n                  \r\n                )}\r\n          </section>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Avatar;\r\n","import React, { useEffect, useState} from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"../redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"../redux/data/dataActions\";\r\n\r\nimport * as s from \"../styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\n//import { create } from \"ipfs-http-client\";\r\n\r\nexport const StyledButton = styled.button`\r\n  font-family: \"Roboto\", sans-serif;\r\n  text-transform: uppercase;\r\n  font-weight: 400;\r\n  font-size: 13px;\r\n  letter-spacing: 1px;\r\n  display: inline-block;\r\n  padding: 11px 36px;\r\n  border-radius: 50px;\r\n  transition: 0.5s;\r\n  margin-bottom: 30px;\r\n  border: 2px solid #71c55d;\r\n\r\n  color: #71c55d;\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction Minter() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  //const data = useSelector((state) => state.data);\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n\r\n  const claimNFTs = (_amount) => {\r\n    if (_amount <= 0) {\r\n      return;\r\n    }\r\n    \r\n\r\n    setFeedback(\"Cartographer minting MetaMap...\");\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(blockchain.account, _amount)\r\n      .send({\r\n        gasLimit: (285000 * _amount).toString(),\r\n        to: \"0x8236afC3447C55a499dc62D62080321563d47342\",\r\n        from: blockchain.account,\r\n        value: blockchain.web3.utils.toWei((0.03 * _amount).toString(), \"ether\"),\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        setFeedback(\r\n          \"Your MetaMap has been repaired by the Cartographer. Ready to explore at OpenSea.io\"\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n  \r\n  useEffect(() => {\r\n    document.title = \"MetaMaps\";\r\n  }, []);\r\n\r\n  return (\r\n    <div>  \r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n\r\n              \r\n                    <StyledButton className=\"btn-get-started scrollto\"\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      CONNECT\r\n                    </StyledButton>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <p>{blockchain.errorMsg}</p>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  \r\n                  <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n\r\n                        <s.SpacerSmall />\r\n                    <StyledButton className=\"btn-get-started scrollto\"\r\n                      disabled={claimingNft ? 1 : 0}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        claimNFTs(\"1\");\r\n                        getData();\r\n                      }}\r\n                     >\r\n                      {claimingNft ? \"BUSY\" : \"Mint 1 for 0.03 ETH\"}\r\n                    </StyledButton>\r\n                    <StyledButton className=\"btn-get-started scrollto\"\r\n                      disabled={claimingNft ? 1 : 0}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        claimNFTs(\"5\");\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      {claimingNft ? \"BUSY\" : \"Mint 5 for 0.15 ETH\"}\r\n                    </StyledButton>\r\n                    <s.SpacerSmall />\r\n                      <p>{feedback}</p>\r\n                  </s.Container>\r\n                  \r\n                )}\r\n          \r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Minter;\r\n","import { useParams } from \"react-router-dom\";\r\nimport React, { useState} from \"react\";\r\nimport Web3 from \"web3\";\r\nimport Minter from \"./Minter\";\r\n\r\nimport mainLogo from './../img/hero-img.png';\r\n\r\n\r\nfunction Whitelist() {\r\n  const id2 = String(useParams()['pass']);\r\n  //console.log(id2)\r\n\r\n  String.prototype.hashCode = function(){\r\n    var hash = 0;\r\n    for (var i = 0; i < this.length; i++) {\r\n        var character = this.charCodeAt(i);\r\n        hash = ((hash<<5)-hash)+character;\r\n        hash = hash & hash; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\n\r\n\r\n\r\nconst [feedback, setFeedback] = useState(\"\");\r\nwindow.addEventListener('load', function () {\r\n  if (typeof web3 !== 'undefined') {        \r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n\r\n      if (window.web3.currentProvider.isMetaMask === true) {\r\n          window.web3.eth.getAccounts((error, accounts) => {\r\n              if (accounts.length == 0) {\r\n                  // there is no active accounts in MetaMask\r\n                  console.log(\"???\")\r\n              }\r\n              else {\r\n                  //console.log(String(accounts).hashCode())\r\n                  //console.log(md5(String(feedback).toUpperCase).slice(26))\r\n                  console.log(String(accounts).hashCode())\r\n                  setFeedback(String(accounts).hashCode())\r\n              }\r\n          });\r\n      } else {\r\n          // Another web3 provider\r\n      }\r\n  } else {\r\n      // No web 3 provider\r\n  }    \r\n});\r\n          \r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n      <section id=\"hero\" className=\"padd-section text-center wow fadeInUp\">\r\n        <div className=\"hero-container\">\r\n          <h1>MetaMaps</h1>\r\n          <h2>Worlds for your NFTs to roam free</h2>\r\n          <img src={mainLogo} alt=\"Hero Imgs\" />\r\n          <br/>\r\n         {feedback-id2==0 || id2 == 1419077977 || id2 == \"meetdave\"? (<div><Minter /></div>) : (<div><p>This secret code isn't yours!</p></div>)}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\nexport default Whitelist;","import React, { useEffect, useState} from \"react\";\r\nimport Web3 from \"web3\";\r\n\r\nimport * as s from \"../styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\n//import { create } from \"ipfs-http-client\";\r\nimport mainLogo from './../img/hero-img.png';\r\n\r\nexport const StyledButton = styled.button`\r\n  font-family: \"Roboto\", sans-serif;\r\n  text-transform: uppercase;\r\n  font-weight: 400;\r\n  font-size: 13px;\r\n  letter-spacing: 1px;\r\n  display: inline-block;\r\n  padding: 11px 36px;\r\n  border-radius: 50px;\r\n  transition: 0.5s;\r\n  margin-bottom: 30px;\r\n  border: 2px solid #71c55d;\r\n  color: #71c55d;\r\n  text-decoration: none;\r\n`;\r\n\r\n//import { create } from \"ipfs-http-client\";\r\n\r\n\r\nfunction Early() {\r\n  \r\nString.prototype.hashCode = function(){\r\n    var hash = 0;\r\n    for (var i = 0; i < this.length; i++) {\r\n        var character = this.charCodeAt(i);\r\n        hash = ((hash<<5)-hash)+character;\r\n        hash = hash & hash; // Convert to 32bit integer\r\n    }\r\n    return hash;\r\n}\r\n\r\n\r\n\r\n\r\nconst [feedback, setFeedback] = useState(\"\");\r\nwindow.addEventListener('load', function () {\r\n  if (typeof web3 !== 'undefined') {        \r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n\r\n      if (window.web3.currentProvider.isMetaMask === true) {\r\n          window.web3.eth.getAccounts((error, accounts) => {\r\n              if (accounts.length == 0) {\r\n                  // there is no active accounts in MetaMask\r\n              \r\n              }\r\n              else {\r\n                  //console.log(String(accounts).hashCode())\r\n                  //console.log(md5(String(feedback).toUpperCase).slice(26))\r\n               \r\n                  setFeedback(String(accounts).hashCode())\r\n              }\r\n          });\r\n      } else {\r\n          // Another web3 provider\r\n      }\r\n  } else {\r\n      // No web 3 provider\r\n  }    \r\n});\r\n          \r\n\r\n\r\nuseEffect(() => {\r\n  document.title = \"MetaMaps\";\r\n}, []);\r\n\r\n\r\nreturn (\r\n  <div>  \r\n\r\n      <section id=\"faq\" className=\"padd-section text-center wow fadeInUp\">\r\n        <div className=\"hero-container\">\r\n          <br/>\r\n          <h2>Whitelist - Early Mint</h2>\r\n          <img src={mainLogo} alt=\"Hero Imgs\" />\r\n          <br/> <br/>\r\n          {feedback === \"\" ? (\r\n                <s.Container ai={\"center\"} jc={\"center\"}>\r\n                 \r\n                  <p>Connect to MetaMask to get your mint code</p>\r\n                  <br/>\r\n                  \r\n                </s.Container>\r\n              ) : (\r\n                <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                  <p>\r\n                  <a href={\"./mint/\" + feedback}>Secret URL</a>\r\n                  </p>\r\n                   \r\n                </s.Container>\r\n                \r\n              )}\r\n\r\n<a href=\"./early\">Refresh</a>\r\n        </div>\r\n      </section>\r\n              \r\n        \r\n      </div>\r\n)\r\n}\r\n\r\nexport default Early;\r\n","import React from 'react';\r\n\r\nimport Header from \"./components/Header\";\r\nimport Hero from \"./components/Hero\";\r\nimport Intro from \"./components/Intro\";\r\nimport Team from \"./components/Team\";\r\nimport Roadmap from \"./components/Roadmap\";\r\nimport Faq from \"./components/Faq\";\r\nimport Footer from \"./components/Footer\";\r\nimport Detail from \"./components/Detail\";\r\nimport Profile from \"./components/Profile\";\r\n\r\nimport Avatar from \"./components/Avatar\";\r\n\r\nimport Whitelist from \"./components/Whitelist\";\r\nimport Early from \"./components/Early\";\r\n//import Whitelist from \"./components/Whitelist\";\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n  } from \"react-router-dom\";\r\n  \r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n      <div>\r\n        \r\n        <Router>\r\n          <Switch>\r\n          <Provider store={store}>\r\n            <Header />\r\n            <Route exact path=\"/\">\r\n              \r\n              \r\n                <Hero />\r\n                <Intro />\r\n                <Team />\r\n                <Roadmap />\r\n                <Faq />\r\n            \r\n              \r\n            </Route>\r\n            <Route path=\"/detail/:id\" component={Detail}></Route>\r\n            <Route path=\"/profile/\" component={Profile}></Route>\r\n            <Route path=\"/mint/:pass\" component={Whitelist}></Route>\r\n            <Route path=\"/avatar/\" component={Avatar}></Route>\r\n            <Route path=\"/early/\" component={Early}></Route>\r\n            <Footer />\r\n            </Provider>\r\n        </Switch>\r\n      </Router>\r\n    \r\n    </div>\r\n    );\r\n  }export default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./App.css\";\r\n\r\n//import Viewer from \"./components/Viewer\";\r\n//import store from \"./redux/store\";\r\n//import { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  \r\n    <App />\r\n    \r\n  ,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}